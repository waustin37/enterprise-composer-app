{"ast":null,"code":"import { of } from 'rxjs';\nimport { map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport let ComposerService = /*#__PURE__*/(() => {\n  var _class;\n  class ComposerService {\n    constructor() {\n      this.composers = [{\n        composerId: 100,\n        fullName: \"Brian Eno\",\n        genre: \"Ambient\"\n      }, {\n        composerId: 101,\n        fullName: \"Philip Glass\",\n        genre: \"Neo-Classical\"\n      }, {\n        composerId: 102,\n        fullName: \"Lady Gaga\",\n        genre: \"Pop\"\n      }, {\n        composerId: 103,\n        fullName: \"John Williams\",\n        genre: \"Soundtrack\"\n      }, {\n        composerId: 104,\n        fullName: \"Lin Manuel Miranda\",\n        genre: \"Musical\"\n      }];\n    }\n    getComposers() {\n      return of(this.composers);\n    }\n    getComposer(composerId) {\n      for (let composer of this.composers) {\n        if (composer.composerId === composerId) {\n          return composer;\n        }\n      }\n      return {};\n    }\n    filterComposers(name) {\n      return of(this.composers).pipe(map(composers => composers.filter(composer => composer.fullName.toLowerCase().indexOf(name) > -1)));\n    }\n  }\n  _class = ComposerService;\n  _class.ɵfac = function ComposerService_Factory(t) {\n    return new (t || _class)();\n  };\n  _class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: _class,\n    factory: _class.ɵfac,\n    providedIn: 'root'\n  });\n  return ComposerService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}